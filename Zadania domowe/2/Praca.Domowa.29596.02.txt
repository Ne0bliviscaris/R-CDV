Imię: Mateusz
Nazwisko: Ratajczak
Numer albumu: 29596
Github: https://github.com/Ne0bliviscaris/R-CDV

# --------------------------------------------------------
# Zadanie.06 
#
#	Firma sprzedaje trzy kategorie produktów A, B oraz C. Każdy z nich
# jest obłożony inną stawką podatku VAT (odpowiednio: 8%, 10% i 20%). Pobierz
# kategorię i cenę. Użyj wyrażenia warunkowego, aby wyliczyć cenę z podatkiem.
# Zakomunikuj wynik do użytkownika. {użyj if else}
#
# --------------------------------------------------------

type <- toupper(readline("Podaj kategorię produktu - A, B lub C:   "))
price <- as.numeric(readline("Podaj cenę produktu:   "))

getProductPriceWithVat <- function (type, price) {
  if(type == "A") {
    vat <- 0.08
  }
  else if(type == 'B'){
    vat <- 0.1
  }
  else if(type == 'C') {
    vat <- 0.2
  }
  else {
    print("niewłaściwa kategoria produktu")
  }
  cat('Obowiązuje stawka VAT,', vat*100, '%. Cena wraz z podatkiem wynosi ', price + price * vat)
}
getProductPriceWithVat(type, price)


# --------------------------------------------------------
# Zadanie.07
#
#	Oblicz iloczyn elementów dowolnego wektora x za pomocą pętli while oraz repeat 
# {użyj while, repeat}
# 
#	x <- 1:5
#	
#
# --------------------------------------------------------



# Pętla while --------------------------------------------
x <- 1:5
index=1
result=1
while (index <= length(x)) {
  result <- result * x[index]
  index = index+1
}
cat("Iloczyn wektora ", x, " wynosi ", result)

# Pętla repeat -------------------------------------------
x <- 1:5
index=1
result=1
repeat {
  result <- result*x[index]
  if (index == length(x)) {
    cat("Iloczyn wektora ", x, " wynosi ", result)
    break
  }
  index <- index + 1
  }
  
  
# --------------------------------------------------------
# Zadanie.08
#
# Użyj zbioru airquality. Odpowiedz na pytania: 		
# a) ile jest przypadków w zbiorze
# b) ile jest przypadków z brakami danych
# c) ile, i jakich, jest zmiennych w zbiorze
# d) ile, i jakich, jest zmiennych z brakami danych
# 
# Sformułuj pełne odpowiedzi tekstowe. Wklej kod obliczeń.
#
# --------------------------------------------------------



# a) ile jest przypadków w zbiorze
cat("Przypadków w zbiorze jest łącznie: ", nrow(airquality))
# b) ile jest przypadków z brakami danych
cat("Przypadków z brakami danych:", nrow(airquality[!complete.cases(airquality),]))
# c) ile, i jakich, jest zmiennych w zbiorze
cat("Łącznie zmiennych jest: ", ncol(airquality), ". Ich nazwy to: ", colnames(airquality), ". Szczegółowa struktura wygląda następująco:")
str(airquality)
# d) ile, i jakich, jest zmiennych z brakami danych
cat("Zmienne z brakami danych: ",colnames(airquality)[colSums(is.na(airquality)) > 0])



  
# --------------------------------------------------------
# Zadanie.09
#
#	Ciąg Fibonacciego to ciąg liczb naturalnych, taki że każdy kolejny
# wyraz stanowi sumę dwóch poprzednich. 
#	https://pl.wikipedia.org/wiki/Ci%C4%85g_Fibonacciego
#	
#	Użyj pętli for, aby stworzyć 20 pierwszych wyrazów ciągu.
#	Podaj ich sumę. {użyj pętli for}
#	
# --------------------------------------------------------  



for (i in 3:22){
  fibN <- (i-1)+(i-2) #suma 
  cat("wyraz ciągu nr", (i-2),", suma", (i-1)," + ", (i-2), " = ", fibN, "\n")
}



# --------------------------------------------------------
# Zadanie.10
# 
# Wygeneruj 100-elementowy wektor z rozkładu Poisonna z parametrem 
# lambda=5 zapomocą komendy {rpois} i przypisz go do zmiennej x.
# Policz dla tego wektora: średnią, sumę, odchylenie standardowe. 
# Zwizualizuj wektor za pomocą histogramu oraz wykresu pudełkowego (boxplot)
# (słupki w kolorze niebieskim, tytuł wykresu "Rozkład Poissona"). 
# 
# --------------------------------------------------------  
  


x <- rpois(100,5) #wygenerowanie wektora z rozkładu Poisonna z parametrem lambda=5
mean(x) # średnia
sum(x) # suma
sd(x) # odchylenie standardowe
hist(x, main = "Rozkład Poissona", col = "blue") #histogram
boxplot(x, main = "Rozkład Poissona", col = "blue") #wykres pudełkowy




# --------------------------------------------------------
# Zadanie.11
  
# Wczytaj dane ze zbioru "countries of the world.csv" 
# Zapoznaj się z danymi korzystając np. z funkcji names(), summary(), str(), 
# dim(), itd., obejrzysz też dane za pomocą funkcji View()
# Zamień puste pola na wartości NA: data[data==""] <- NA
# zmień nazwy kolumn, zgodnie z następującym wzorem:
# Area_sq_mi -> Area
# Pop_Density_per_sq_mi -> Pop_dens
# GDPper_capita -> GDP
# Usuń ze zbioru wszystkie zmienne poza: Country, Region, Population, Area, 
# Pop_dens, GDP, Literacy, Birthrate, Deathrate.
# Usuń spacje ze zmiennej Region (z przodu i z tyłu nazw - funkcja str_trim)
#  
# Dla ilu krajów występują braki danych w zmiennej Literacy? Użyj funkcji is.na i sum
# Wyświetl wszystkie kategorie zmiennej Region. Jaka jest dominanta? (RVAideMemoire::mod(?))
# Sprawdź udział procentowy poszczególnych kategorii.
# Jaka jest średnia i mediana zmiennych Population, Area i GDP? 
# Stwórz histogram oraz wykres pudełkowy dla zmiennych GDP oraz Literacy. 
# Odpowiednio podpisz osie histogramu (uwzględniając też jednostki)
# Wyświetl kwartyle dla funkcji GDP. Teraz stwórz nową zmienną - będzie to zmienna 
# kategoryczną oparta na zmiennej GDP. Nowa zmienna:
# - powinna się nazywać "GDP_binned"
# - będzie przyjmować cztery wartości (kategorie):
# - pierwsza kategoria ma zawierać wartości od minimum do pierwszego kwartyla. Nazwij ją "Very_poor"
# - druga kategoria ma zawierać wartości od pierwszego kwartyla do mediany. Nazwij ją "Poor"
# - trzecia kategoria ma zawierać wartości od mediany do trzeciego. Nazwij ją "Medium"
# - czwarta kategoria ma zawierać wartości od mediany do trzeciego. Nazwij ją "Rich"
# - (użyj funkcji ifelse albo case_when)  
# Stwórz nową zmienną logiczną, która przyjmuje wartość „True”, kiedy wartość 
# zmiennej „Birthrate” jest większa lub równa od wartości zmiennej „Deathrate”,
# a wartość „False” w przeciwnym przypadku. Wartość „True” w nowej zmiennej
# oznacza – najprościej ujmując – że w roku badania w danym kraju więcej osób się
# urodziło niż umarło. Stwórz wykres słupkowy dla nowo powstałej zmiennej, 
#  pokazując częstości występowania pierwszej i drugiej kategorii.





# ---------------------------------------------------
# Wczytaj dane ze zbioru "countries of the world.csv" 
df <- read.csv("https://github.com/RPuakowski/Teaching/raw/main/countries%20of%20the%20world.csv", header = TRUE, sep = ",", dec = ",")	
# Zapoznaj się z danymi korzystając np. z funkcji names(), summary(), str(), dim(), itd., obejrzysz też dane za pomocą funkcji View()
names(df)
summary(df)
str(df)
dim(df)
#View(df) - ukryte dla szybkiego ponownego wykonywania całości
# Zamień puste pola na wartości NA: data[data==""] <- NA
df <- read.csv("https://github.com/RPuakowski/Teaching/raw/main/countries%20of%20the%20world.csv", na.strings = c("", "NA"))
# zmień nazwy kolumn, zgodnie z następującym wzorem:
# Area_sq_mi -> Area
colnames(df) <- gsub("Area..sq..mi..", "Area", colnames(df))
# Pop_Density_per_sq_mi -> Pop_dens
colnames(df) <- gsub("Pop..Density..per.sq..mi..", "Pop_dens", colnames(df))
# GDPper_capita -> GDP
colnames(df) <- gsub("GDP....per.capita.", "GDP", colnames(df))
# Literacy.... -> Literacy
colnames(df) <- gsub("Literacy....", "Literacy", colnames(df))
# Usuń ze zbioru wszystkie zmienne poza: Country, Region, Population, Area Pop_dens, GDP, Literacy, Birthrate, Deathrate.
df <- subset(df, select = c("Country", "Region","Population", "Area", "Pop_dens", "GDP", "Literacy", "Birthrate", "Deathrate"))
# Usuń spacje ze zmiennej Region (z przodu i z tyłu nazw - funkcja str_trim)
df$Region <- stringr::str_trim(df$Region)

# Dla ilu krajów występują braki danych w zmiennej Literacy? Użyj funkcji is.na i sum
cat("Braki w literacy występują dla", sum(is.na(df$Literacy)), "krajów")
# Wyświetl wszystkie kategorie zmiennej Region. Jaka jest dominanta? (RVAideMemoire::mod(?))
cat("Wszystkie kategorie zmiennej Region to:\n\n", unique((df$Region)), ".\n\nDominantą zmiennej region jest:", RVAideMemoire::mod(df$Region))
# Sprawdź udział procentowy poszczególnych kategorii.
cat("Udział procentowy poszczególnych kategorii:\n")
prop.table(table(df$Region))*100
# Jaka jest średnia i mediana zmiennych Population, Area i GDP? 
cat("Dla zmiennej Population średnia wynosi:", mean(df$Population),", a mediana wynosi:", median(df$Population))
cat("Dla zmiennej Area średnia wynosi:", mean(df$Area),", a mediana wynosi:", median(df$Area))
cat("Dla zmiennej GDP średnia wynosi:", mean((df$GDP), na.rm = TRUE),", a mediana wynosi:", median((df$GDP), na.rm = TRUE))
# Stwórz histogram oraz wykres pudełkowy dla zmiennych GDP  oraz Literacy.
hist(df$GDP, main = "Global GDP", xlab = "Millions usd", ylab = "Countries", col = "lightgreen", labels = TRUE )
boxplot(df$GDP, main = "Global GDP", ylab = "Millions usd", col = "lightgreen", range = 1.4)
# Odpowiednio podpisz osie histogramu (uwzględniając też jednostki)
df$Literacy <- gsub(",", ".", df$Literacy)
hist(na.omit(as.numeric(df$Literacy)), main = "Global Literacy", xlab = "Literacy %", ylab = "Countries", col = "brown", labels = TRUE )
boxplot(as.numeric(df$Literacy), main = "Global Literacy", ylab = "Literacy %", col = "brown", range = 1.2)
# Wyświetl kwartyle dla funkcji GDP.
quantile(df$GDP, na.rm = T)
# Teraz stwórz nową zmienną - będzie to zmienna 
# kategoryczną oparta na zmiennej GDP. Nowa zmienna:
# - powinna się nazywać "GDP_binned"
# - będzie przyjmować cztery wartości (kategorie):
# - pierwsza kategoria ma zawierać wartości od minimum do pierwszego kwartyla. Nazwij ją "Very_poor"
first_quartile <- quantile(df$GDP, 0.25, na.rm = TRUE)
# - druga kategoria ma zawierać wartości od pierwszego kwartyla do mediany. Nazwij ją "Poor"
median_gdp <- quantile(df$GDP, 0.5, na.rm = TRUE)
# - trzecia kategoria ma zawierać wartości od mediany do trzeciego. Nazwij ją "Medium"
third_quartile <- quantile(df$GDP, 0.75, na.rm = TRUE)
# - czwarta kategoria ma zawierać wartości od mediany do trzeciego. Nazwij ją "Rich"
# - (użyj funkcji ifelse albo case_when)  
df$GDP_binned <- case_when(
  df$GDP <= first_quartile ~ "Very_poor", # 0-25
  df$GDP > first_quartile & df$GDP <= median_gdp ~ "Poor", # 26-50
  df$GDP > median_gdp & df$GDP <= third_quartile ~ "Medium", # 51-75
  df$GDP > third_quartile ~ "Rich") # 76-100
# Stwórz nową zmienną logiczną, która przyjmuje wartość „True”, kiedy wartość 
# zmiennej „Birthrate” jest większa lub równa od wartości zmiennej „Deathrate”,
# a wartość „False” w przeciwnym przypadku. Wartość „True” w nowej zmiennej
# oznacza – najprościej ujmując – że w roku badania w danym kraju więcej osób się
# urodziło niż umarło. 
df$More_Births <- df$Birthrate >= df$Deathrate
#Stwórz wykres słupkowy dla nowo powstałej zmiennej, 
#  pokazując częstości występowania pierwszej i drugiej kategorii.
barplot(table(df$More_Births),
        main = "Kraje z większą liczbą urodzeń niż zgonów",
        col = c("lightblue", "lightgreen"), 
        legend = c("Więcej zgonów", "Więcej urodzeń"),
        ylab = "Liczba krajów",
        xlab = "Więcej urodzeń niż zgonów")
